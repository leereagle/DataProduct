library(swirl)
swirl()
q()
library(swirl)
swirl()
5 + 7
x <- 5 + 7
x
x-3
x - 3
y <- x-3
y
c(1.1,9,3.14)
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z / mysqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"),recursive = TRUE)
unlink("testdir2",recursive = TRUE)
setwd(old.dir)
unlink("testdir1",recursive=TRUE)
unlink("testdir",recursive=TRUE)
swirl()
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
my_seq <- seq(5,10,length=30)
length(my_length)
length(my_seq)
1:length(my_seq)
seq(along.with=my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2),times=40)
rep(c(0,1,2),times=10)
rep(c(0,1,2),each = 10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("my","name","is")
my_char <- c("My","name","is")
my_char
paste(my_char,collapse = " ")
my_name <- c(my_char,"Matt")
my_name
paste(my_name,collapse=" ")
paste("Hello","world!",sep=" ")
paste(1:3,sep=c("X","Y","Z"))
paste(1:3,c("X","Y","Z"),sep="")
paste(LETTERS,1:4,sep="-")
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf/Inf
Inf-Inf
x
library(swirl)
swirl()
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11,bar=2,norf=NA)
vect
names(vect)
vect2 <- C(11,2,NA)
vect2 <- C(11,2,NA)
vect2
vect
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
indentical(vest,vest2)
identical(vest,vest2)
identical(vect,vect2)
vect["bar"]
vect[c["foo","bar"]]
vect[c("foo","bar")]
my_vector <- [1:20]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attribute(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20,nrow=4,ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- ("patient","age","weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data,cnames)
colnames(my_data) <- cnames
my_data
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 == NOT 7
5 == 7
=5 == -7
-5 == -7
NOT(5==7)
5 == !7
!5 == !7
!(5==7)
FALSE&FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
q()
sessionInfo
sessionInfo()
library(swirl)
swirl()
isTRUE(6>4)
identical('twins','twins')
xor(5==6,!FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
swirl()
install_from_swirl("Statisical_Inference")
library(swirl)
swirl()
library(swirl)
install.packages("Statistical Inference")
install.packages("Statistical_Inference")
?swirl
swirl()
swirl()
install_from_swirl("Statistical Inference")
swirl()
1-(2+1)/36
deck
1/52
52
1/13
0
3/13
121/612
11/204
2/51
3.2^-2
(.8+1.6)/2
(.8*1.6)/2
.8*1.6/2/2
(.8*1.6)/2
mypdf
mypdf(0,1.6)
mypdf(1.6)
integrate(mypdf,0,1.6)
F(x)/2
(x^2)/4/2
(2^2)/4/2
x^2=4*.5=2
x^2/2
2
0.8
1.6
0.4
info()
x^2/2
2
x-2
x^-2
x^1/2
skip()
library(swirl)
swirl()
1/6
3.5
expect_dice
dice_high
expect_dice(dice_high)
expect_dice(dice_low)
E((X_hi +
| X_lo)/2)
E((X_hi + X_lo)/2)
(edh+edl)/2
integrate(myfunc,0,2)
View(myfunc)
spop
mean(pop)
mean(spop)
allsam
apply(allsam,1,mean)
smeans
mean(smeans)
library(swirl)
swirl()
dice_sqr
ex2_fair <- dice_sqr * (dice_fair)
ex2_fair <- sum(dice_sqr * dice_fair)
ex2_fair
ex2_fair ^ 2
ex2_fair - 3.5 ^2
ex2_high <- sum(dice_sqr * dice_high)
sum(dice_high * dice_sqr) - edh ^ 2
library(swirl)
swirl()
sd(apply(matrix(rnorm(1000),1000),1,mean))
sd(apply(matrix(rnorm(10000),1000),1,mean))
1/sqrt(10)
1/sqrt(120)
sd(apply(matrix(rnorm(10000),1000),1,mean))
sd(apply(matrix(runif(10000),1000),1,mean))
sd(apply(matrix(runif(10000),1000),1,mean))
2/sqrt(10)
sd(apply(matrix(rpois(10000),1000),1,mean))
sd(apply(matrix(rpois(10000,4),1000),1,mean))
1/sqrt(10)
1/(2*sqrt(10))
sd(apply(matrix(sample(0:1,10000,TRUE),1000),1,mean))
library(swirl)
install_from_swirl("Regression Models")
swirl()
swirl()
library(swirl)
swirl()
choose(5,3) * (0.8*3)*(0.2)*(-2)
-9.6
choose(5,3)*(0.8)^3*(0.2)^(5-3) + choose(5,4)*(0.8)^4*(0.2)^(5-4) + choose(5,5)*(0.8)^5*(0.2)^(5-5)
choose(5,3)*(0.8)^3*(0.2)^(5-3) + choose(5,4)*(0.8)^4*(0.2)^(5-4) + choose(5,5)*(0.8)^5*(0.2)^(5-5)
pbinom(2,size=5,prob=0.8,lower.tail=FALSE)
library(swirl)
matt
swirl()
swirl()
library(swirl)
swirl()
q()
library(swirl)
swirl()
library(swirl)
swirl()
install_from_swirl("data analysis")
install_from_swirl("data analysis")
q()
library(swirl)
install_from_swirl("data analysis")
swirl()
install_from_swirl("Data Analysis")
installed.packages()
library(devtools)
install_github('ramnathv/slidify')
install_github('ramnathv/slidifyLibraries')
library(slidify)
author("first_deck")
getwd()
setwd("~/R/Project/")
author("first_deck")
slidify("index.Rmd")
browseurl("index.html")
browseurl("first_deck/index.html")
browseurl("~/first_deck/index.html")
browseURL("~/first_deck/index.html")
browseURL("index.html")
browseURL("index.html")
browseURL("index.html")
